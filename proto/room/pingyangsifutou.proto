package pingyangsifutou;
import "common.proto";
import "room/room.proto";

/*
	游戏信息
*/
message GameInfo{
	optional uint32 ante 				= 1; 	//剩余每张牌的积分
	optional common.BuildInfo buildInfo = 3; 	//创建房间的配置信息
	optional uint32 code 				= 4;	//房号
}

/*
	游戏中的玩家信息
*/
message GamePlayer{
	optional room.Player player 	= 1; 	//玩家信息
	optional bool play 				= 2; 	//false:旁观 true:在玩
	optional bool offline 			= 3; 	//false:在线 true:离开
	optional bool pay 				= 4; 	//是否支付,根据state来判断
	optional bool ready 			= 5;	//false 未准备 true 准备
	optional uint32 cardsNum 		= 6; 	//牌数
	repeated uint32 cards 			= 7; 	//牌
	optional bool turn 				= 8; 	//false:没有轮到你操作 true:轮到你操作
	repeated uint32 outcards 		= 9; 	//最后出的手牌 nil:没有 not nil:有
	optional int32 points 			= 10; 	//总积分
	optional int32 agree 			= 11; 	//0:未投 1:赞成 2:反对
	optional int32 agreeStartGame 	= 12; 	//0:未投 1:赞成 2:反对
	optional uint32 curScore 		= 13;	//当前抓分
	optional int32 curGong 			= 14;	//当前贡献分
	optional uint32 ranking			= 15;  	//几游 0还没出完，1上游，2二游，3三游，4末游
	repeated uint32 friendCards		= 16;	//队友手牌
	optional bool feiFlag 			= 17;	//是否飞牌标志, 当前玩家是否有飞牌 
	optional bool pass				= 18;	//上一轮是否出过牌 
	optional string yuanZiCards 	= 19;	//原子牌
	optional string biggestCards	= 20;	//最大牌型
	optional string gongXianBombCards = 21;	//贡献炸弹
	optional bool giveUp 			= 22;	//是否弃牌了
	optional bool banker			= 23;	//庄家
}

/*
	投票信息
*/
message VoteInfo
{
	optional uint32 promoterId 	= 1;	//发起投票者ID
	optional bool 	poll 		= 2;	//是否发起投票
	optional uint32 time 		= 3;	//发起投票时间
	optional uint32 expiryTime 	= 4;	//发起投票总时间
	optional uint32 leftTime 	= 5;	//发起投票剩余时间
}

/*
	游戏登录
*/
message GameLoginRsp {
	optional common.Result result 	= 1;   	//结果状态
	optional GameInfo gameInfo 		= 2; 	//游戏配置
	repeated GamePlayer players 	= 3; 	//所有玩家信息
	optional uint32 state 			= 4; 	//处于玩牌状态
											//Table.MASTER_PAY 		= 1 	--房主支付状态
											//Table.NON_MASTER_PAY	= 2 	--非房主支付状态
											//Table.START 			= 3 	--游戏准备开始
											//Table.DEAL 			= 4 	--发牌
											//Table.TURN 			= 5 	--玩家操作阶段
											//Table.END 			= 6 	--结果阶段
	optional uint32 masterId		= 5;	//房主id
	optional uint32 clockTime		= 6;	//倒计时
	optional uint32 round 			= 7;	//第几局
	optional uint32 totalRound 		= 8;	//总局数
	optional VoteInfo destroyVoteInfo = 9;	//解散房间的投票信息
	optional VoteInfo startGameVoteInfo = 10;	//开始游戏的投票信息
	repeated uint32 maxcards 		= 11; 	//出牌
	optional uint32 curTableScore	= 12;	//当前桌面抓分数
}

/*
	广播登录房间
*/
message GamePlayerLoginRsp {
	optional common.Result result  	= 1;  //结果状态
	repeated GamePlayer players 	= 2;  //玩家信息
}
/*
	游戏开始
*/
message StartRsp {
	optional common.Result result 	= 1;	//结果状态
	optional uint32 round 			= 2;	//第几局
	optional uint32 totalRound 		= 3;	//总局数
	repeated uint32 readyUids 		= 4;	//准备玩家的UID
}

/*
	准备操作
*/
message ReadyReq {
	optional common.Request request = 1; 	// 请求码
}

/*
	准备操作返回
*/
message ReadyRsp {
	optional common.Result result 	= 1;	//结果状态 
											//0:操作合法 
											//1:准备时机不对 
											//2:不在桌子上 
											//3:已经准备了 
											//4:AA情况下，没有支付
											//5:房主正在续费中
	optional uint32 uid 			= 2;	//准备玩家
}

/*
	换位置亮牌
*/
message ChangeSeatInfos {
	optional uint32 uid = 1;	//玩家id
	optional uint32 card = 2;	//换位置的牌
}

/*
	换桌位信息
*/
message SwitchSeatRsp {
	optional common.Result result	= 1;
	repeated ChangeSeatInfos changeSeatInfos = 2;
	optional uint32 switchUid1 = 3;		//换位置的id
	optional uint32 switchUid2 = 4;		//换位置的id，假如不需要换位置，则两个id相同
	optional uint32 seatId1 = 5;		//switchUid1交换后的座位号
	optional uint32 seatId2 = 6;		//switchUid2交换后的座位号
}

/*
	发牌
*/
message DealRsp {
	optional common.Result result 	= 1;   	//结果状态
	optional uint32 cardsNum        = 2;	//发牌数量
	repeated uint32 cards 			= 3; 	//牌
	optional uint32 bankerId		= 4; 	//庄家ID
	optional uint32 bankerCard 		= 5;	//定庄的那张牌
	optional uint32 firstOpId		= 6;	//最先出牌玩家
	optional uint32 firstOpCard		= 7;	//定最先出牌玩家
}

/*
	扣分信息
*/
message GongXianFenInfo {
	optional uint32 uid 		= 1;	//用户id
	optional int32 changeFen 	= 2;	//变化的分
	optional int32 gongXianFen 	= 3;	//总分
}

/*
	原子牌信息（3个王及以上，4个牌值一样的牌）
*/
message YuanZiCardInfo {
	optional uint32 uid 			= 1;	//用户id
	optional string yuanZiCards 	= 2;	//原子牌，{{1,1,1,1}，{53,53,54}}
	optional int32 gongXianFen		= 3;	//原子牌的贡献分
	optional int32 totalGongXianFen = 4; 	//累积贡献分
}

/*
	亮原子牌
*/
message ShowYuanZiCardsRsp {
	optional common.Result result 			= 1;	//结果状态
	repeated YuanZiCardInfo yuanZiCardInfos = 2;	//原子牌
}

/*
	开始弃牌
*/
message StartGiveUpRsp {
	optional common.Result result	= 1;
	optional uint32 opTime 			= 2; 	//操作时间
}

/*
	弃牌
*/
message GiveUpReq {
	optional common.Request request = 1;
}

/*
	弃牌
*/
message GiveUpRsp {
	optional common.Result result			= 1;
	optional uint32 uid			= 2;	//弃牌玩家id
}

/*
	通知开始亮最大牌型
*/
message StartShowBiggestCardTypeRsp {
	optional common.Result result 		= 1;
	optional uint32 opTime				= 2;	//操作时间
}

/*
	亮最大牌型
*/
message ShowBiggestCardTypeReq {
	optional common.Request request = 1; 
}

/*
	最大牌型信息
*/
message BiggestCardTypeInfo {
	optional uint32 uid 		= 1; 	//用户id 
	repeated uint32 cards 		= 2; 	//最大牌型
	optional uint32 ranking		= 3; 	//排名
}

/*
	亮最大牌型
*/
message ShowBiggestCardTypeRsp {
	optional common.Result result 						= 1;	//结果状态
	repeated BiggestCardTypeInfo biggestCardTypeInfos 	= 2;	//最大牌型
}

/*
	开始亮贡献炸弹
*/
message StartShowGongXianBombCardsRsp {
	optional common.Result result 		= 1;
	optional uint32 opTime 				= 2;
}

/*
	亮贡献炸弹
*/
message ShowGongXianBombCardsReq {
	optional common.Request request 	= 1;
}

/*
	贡献炸弹信息
*/
message GongxianBombCardInfo {
	optional uint32 uid 				= 1;	//用户id
	optional string gongXianBombCards 	= 2; 	//贡献炸弹 
	optional int32 gongXianFen			= 3;	//贡献分
	optional int32 totalGongXianFen		= 4;	//累积贡献分
}

/*
	亮贡献炸弹
*/
message ShowGongXianBombCardsRsp {
	optional common.Result result 						= 1;	//结果状态
	repeated GongxianBombCardInfo gongxianBombCardInfos = 2; 	//贡献炸弹
	optional bool finish = 3;	//是否都亮完了贡献炸弹
}

/*
	可以执行飞牌操作的玩家
*/
message FeiInfo {
	optional uint32 uid = 1;	//玩家id
	optional bool isFeiFlag = 2;	//是否可以飞牌
}

/*
	轮到某玩家操作
*/
message TurnRsp {
	optional common.Result result 	= 1;   	//结果状态
	optional uint32 uid        		= 2;	//轮到玩家id
	optional uint32 opTime        	= 3;	//操作时间
	repeated uint32 outcards 		= 4; 	//最后一个玩家出的牌 （新的一轮必为空表，例如，开局，或其俩人要不起）
	optional bool feiFlag 			= 5;	//是否飞牌标志, 当前玩家是否有飞牌 true
	optional bool pass				= 6;	//上一轮是否出过牌 false
}

/*
	某玩家操作
*/
message OperationReq {
	optional common.Request request = 1; 	// 请求码
	repeated uint32 outcards 		= 2;	//出牌 空表:要不起 非空表:出牌
	optional bool isFeiPai			= 3;	//是否是飞牌
}

/*
	某玩家操作返回
*/
message OperationRsp {
	optional common.Result result 	= 1;	//结果状态 0:操作合法 !0:操作非法 
											//1:该玩家不存在 
											//2:没有轮到该玩家出牌 
											//3:第一次出牌，必须要出牌，不能Pass 
											//4:你手上有大于上家的牌 
											//5:牌型不对 
											//6:你出的牌比上家的牌小 
											//7:你出的牌不是你的牌
											//8:下一玩家抱单，你必须出最大单张
											//9:炸弹不可拆
	optional uint32 uid 			= 2;	//出牌玩家
	repeated uint32 outcards 		= 3;	//出的牌
	optional uint32 curTableScore	= 4;	//本轮桌面上的分
	optional uint32 ranking 		= 5; 	//几游 0还没出完，1上游，2二游，3三游，4末游
	optional bool isFeiPai			= 6;	//是否是飞牌
}

/*
	广播玩家抓的分和贡献分
*/
message ZhuaFenRsp {
	optional common.Result result 		= 1; 	//结果状态
	optional uint32 uid 				= 2;	//玩家id
	optional uint32 zhuaFen 			= 3;	//玩家抓分数
	optional uint32 curTableScore		= 4;	//本轮桌面上的分
}

message GongXianFenRsp {
	optional common.Result result 					= 1; 	//结果状态
	repeated GongXianFenInfo gongXianFenInfos		= 2;	//贡献信息	
}

/*
	结算信息
*/
message EndInfo {
	optional uint32 uid 			= 1;	//玩家
	repeated uint32 leftcards 		= 2;	//玩家剩余牌
	optional int32 points 			= 3;	//当局积分变动
	optional int32 totalPoints 		= 4;	//当局积分变动
	optional uint32 zhuaFen 		= 5;	//玩家抓分数
	optional int32 gongXianFen 		= 6;	//玩家贡献分
	optional uint32 ranking			= 7;	//排名
}

/*
	总结算信息
*/
message FinalInfo {
	optional uint32 uid 			= 1;	//玩家
	optional int32 maxPoints 		= 2;	//单局最高得分
	optional int32 maxBombs 		= 3;	//最大炸弹的线数
	optional int32 shuangKouTimes	= 4;	//双扣次数
	optional int32 winTimes 		= 5;	//赢的次数
	optional int32 lostTimes 		= 6;	//输的次数
	optional int32 totalPoints 		= 7;	//总积分
}

/*
	结算
*/
message EndRsp {
	optional common.Result result 	= 1;   	//结果状态
	optional bool lastRound 		= 2; 	//是否是最后一局
	repeated EndInfo endinfos 		= 3; 	//结算信息
	repeated FinalInfo finalInfos 	= 4; 	//总结算信息(只有最后一局才有)
	optional bool destroy 			= 5;	//是否中途解散
}

/*
	积分
*/
message Points {
	optional uint32 uid 			= 1;	//玩家
	optional int32 points 			= 2;	//变动的积分
	optional int32 totalPoints 		= 3;	//总积分
}

/*
	积分变动
*/
message PointsRsp {
	optional common.Result result 	= 1;	//结果状态 0:操作合法 !0:操作非法
	optional uint32 reason 			= 2; 	//变动原因 1:炸弹 2:未定义
	repeated Points points 			= 3;	//玩家积分
}

/*
	队友手牌
*/
message FriendCardRsp {
	optional common.Result result 	= 1;
	optional uint32 uid 		  	= 2;
	repeated uint32 cards 			= 3;
}