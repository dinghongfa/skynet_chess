package taskparse;
/*
	玩家游戏数据，用来解析，生成 任务达成
*/

/*
	消息类型
*/
message Type {
	required uint32 code 	 = 1; //操作码
	required uint32 platform = 2; //平台 1 android 2 ios
	required uint32 game 	 = 3; //
	required uint32 api 	 = 4; //渠道
}

/*
	消息基类
*/
message Base {
	optional Type type = 1; // 请求码
}
/*
	用户玩牌数据
*/
message PlayData {
	required uint32 uid  	= 1; // 用户ID
	repeated uint32 cards 	= 2; // 用户手牌
	required int32  win  	= 3; // 用户赢了多少
	optional bool   banker  = 4; // 是否为庄家
	optional int32  times  	= 5; // 加注
	optional int32  time  	= 6; // 游戏时间
}

/*
	用户玩牌数据
*/
message Game {
	required Type type = 1; // 请求码
	required int32 gameId = 2; // 游戏ID
	required int32 roomId = 3; // 房间ID
	required int32 tableId = 4; // 桌子ID
	required int32 ante = 5; // 底注
	repeated PlayData playDatas = 6; // 用户玩牌数据
}

/*
	跑得快的玩牌数据
*/

message PaoDeKuai {
	required int32 uid 			= 1; 	// 用户ID
	required string nick 		= 2; 	// 用户ID
	repeated int32 handcards 	= 3; 	// 手牌
	required int32 points 		= 4; 	// 当局积分
	required int32 totalPoints 	= 5; 	// 目前总积分
	repeated int32 bombs 		= 6; 	// 炸弹
	required int32 losetype 	= 7; 	// 输的类型(全关,包赔)
	repeated int32 leftcards 	= 8; 	// 剩余牌
}
/*
	跑得快的玩牌数据
*/
message PaoDeKuaiGame {
	required Type type 				= 1; 	// 请求码
	required int32 gameId 			= 2; 	// 游戏ID
	required int32 roomId 			= 3; 	// 房间ID
	required int32 tableId 			= 4; 	// 桌子ID
	required int32 masterId 		= 5; 	// 房主
	required int32 diamond 			= 6; 	// 钻石
	required int32 totalRound 		= 7; 	// 钻石
	required bool AA 				= 8; 	// AA
	required int32 time 			= 9; 	// 时间
	required int32 round 			= 10; 	// 第几局
	repeated PaoDeKuai playDatas 	= 11; 	// 用户玩牌数据
}



/*
	玩家属性
*/
message PlayerAttr {
	required uint32 uid 			= 1; 	// 玩家ID
	required int32 attrId 			= 2; 	// 属性ID
											// 1:金币
											// 2:钻石
											// 
	required int64 delta 			= 3; 	// 变化值
	required int64 total 			= 4; 	// 变化后的值
}

/*
	玩家属性流
*/
message PlayerAttrFlow {
	required Type type 				= 1; 	// 请求码
	required uint32 eventType 		= 2; 	// 事件类型
											// 1:世界聊天
											// 2:邮件奖励
											// 3:创建房间
											// 4:解散房间
											// 5:玩家充值
											// 6:代理充值
											// 7:代理给玩家充值
											// 8:代理提成
											// 9:玩牌活动
											
	optional int64 desc1 			= 3; 	// 事件描述
	optional int64 desc2 			= 4; 	// 事件描述
	optional int64 desc3 			= 5; 	// 事件描述
	optional int64 desc4 			= 6; 	// 事件描述
	repeated PlayerAttr playerAttrs = 7; 	// 用户属性数据
}


/*
	玩牌数据
*/
message Points {
	required int32 uid 					= 1; 	// 用户ID
	required string nick 				= 2; 	// 用户昵称
	required int32 points 				= 3; 	// 当局积分
	required int32 totalPoints 			= 4; 	// 目前总积分
}
/*
	玩牌数据
*/
message PlayPoints {
	required Type type 				= 1; 	// 请求码
	required int32 gameType 		= 2; 	// 游戏类型
	required int32 gameId 			= 3; 	// 游戏ID
	required int32 roomId 			= 4; 	// 房间ID
	required int32 tableId 			= 5; 	// 桌子ID
	required int32 masterId 		= 6; 	// 房主
	required int32 diamond 			= 7; 	// 钻石
	required int32 totalRound 		= 8; 	// 钻石
	required bool AA 				= 9; 	// AA
	required string buildJson 		= 10; 	// 第几局
	required int32 time 			= 11; 	// 时间
	required int32 round 			= 12; 	// 第几局
	repeated Points points 			= 13; 	// 用户玩牌数据
}


/*
	玩家操作数据
*/
message PlayOps {
	required Type  type 			= 1; 	// 请求码
	required int32 gameType 		= 2; 	// 游戏类型
	required uint32 code 			= 3; 	// 房间号
	required uint32 time 			= 4; 	// 时间
	required uint32 round 			= 5; 	// 第几局
	required uint32 uid 			= 6; 	// 操作
	required uint32 opTime 			= 7; 	// 操作时间
	required uint32 op 				= 8; 	// 操作
	repeated int32 value 			= 9; 	// 值
	required uint32 status 			= 10; 	// 是否有效
}

/*
	玩家操作数据
*/
message Login {
	required Type   type 			= 1; 	// 请求码
	required bool 	new 			= 2; 	// 是否是新用户
	required uint32 uid 			= 3; 	// 玩家ID
	optional string unionId 		= 4; 	// 微信的UUID
}


/*
	玩家牌局数据(原始数据)
*/

message GameInfo {
	required Type 	type 			= 1; 	// 请求码
	required int32 	gameType 		= 2; 	// 游戏类型
	required uint32 code 			= 3; 	// 房间号
	required uint32 createTime 		= 4; 	// 时间
	required uint32 round 			= 5; 	// 第几局
	repeated uint32 uids 			= 6; 	// 玩家IDs
	optional uint64 opTime 			= 7; 	// 操作时间
	optional bytes 	pb 				= 8; 	// 牌局数据
}

/*
	玩家牌局数据(原始数据)
*/

message AgentRoom {
	required Type 	type 			= 1; 	// 请求码
	required int32 	gameType 		= 2; 	// 游戏类型
	required uint32 code 			= 3; 	// 房间号
	required uint32 uid 			= 4; 	// 房主
	required uint32 op 				= 5; 	// 操作值
	required uint32 status 			= 6; 	// 操作结果
}


/*
	钻石同步(原始数据)
*/

message Diamond {
	required Type 	type 			= 1; 	// 请求码
	required uint32 diamond 		= 2; 	// 房间号
	required uint32 uid 			= 3; 	// 房主
}


/*
	玩家牌局数据(原始数据)
*/

message Bullet {
	required Type 	type 			= 1; 	// 请求码
	required int32 	gameType 		= 2; 	// 游戏类型
	required uint32 code 			= 3; 	// 茶馆号
	required uint32 uid 			= 4; 	// 发弹幕者ID
	required string msg 			= 5; 	// 弹幕内容
}
